{"version":3,"sources":["../src/revised-search.js"],"names":[],"mappings":"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","file":"revised-search.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Revised search plugin written by Jamie Morris\n// Define search commands. Depends on advanceddialog.js\n((mod) => {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"codemirror\"), require(\"codemirror-advanceddialog\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"codemirror\", \"codemirror-advanceddialog\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})((CodeMirror) => {\n  \"use strict\";\n\n  var replaceDialog = `\n    <div class=\"row find\">\n      <label for=\"CodeMirror-find-field\">Replace:</label>\n      <input id=\"CodeMirror-find-field\" type=\"text\" class=\"CodeMirror-search-field\" placeholder=\"Find\" />\n      <span class=\"CodeMirror-search-hint\">(Use /re/ syntax for regexp search)</span>\n      <span class=\"CodeMirror-search-count\"></span>\n    </div>\n    <div class=\"row replace\">\n      <label for=\"CodeMirror-replace-field\">With:</label>\n      <input id=\"CodeMirror-replace-field\" type=\"text\" class=\"CodeMirror-search-field\" placeholder=\"Replace\" />\n    </div>\n    <div class=\"buttons\">\n      <button>Find Previous</button>\n      <button>Find Next</button>\n      <button>Replace</button>\n      <button>Replace All</button>\n      <button>Close</button>\n    </div>\n  `;\n\n  var findDialog = `\n    <div class=\"row find\">\n      <label for=\"CodeMirror-find-field\">Find:</label>\n      <input id=\"CodeMirror-find-field\" type=\"text\" class=\"CodeMirror-search-field\" placeholder=\"Find\" />\n      <span class=\"CodeMirror-search-hint\">(Use /re/ syntax for regexp search)</span>\n      <span class=\"CodeMirror-search-count\"></span>\n    </div>\n    <div class=\"buttons\">\n      <button>Find Previous</button>\n      <button>Find Next</button>\n      <button>Close</button>\n    </div>\n  `;\n\n  let numMatches = 0;\n  let searchOverlay = (query, caseInsensitive) => {\n    if (typeof query == \"string\")\n      query = new RegExp(query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\"), caseInsensitive ? \"gi\" : \"g\");\n    else if (!query.global)\n      query = new RegExp(query.source, query.ignoreCase ? \"gi\" : \"g\");\n\n    return {\n      token: (stream) => {\n        query.lastIndex = stream.pos;\n        var match = query.exec(stream.string);\n        if (match && match.index == stream.pos) {\n          stream.pos += match[0].length || 1;\n          return \"searching\";\n        } else if (match) {\n          stream.pos = match.index;\n        } else {\n          stream.skipToEnd();\n        }\n      }\n    };\n  }\n\n  function SearchState() {\n    this.posFrom = this.posTo = this.lastQuery = this.query = null;\n    this.overlay = null;\n  }\n\n  let getSearchState = (cm) => {\n    return cm.state.search || (cm.state.search = new SearchState());\n  }\n\n  let queryCaseInsensitive = (query) => {\n    return typeof query == \"string\" && query == query.toLowerCase();\n  }\n\n  let getSearchCursor = (cm, query, pos) => {\n    // Heuristic: if the query string is all lowercase, do a case insensitive search.\n    return cm.getSearchCursor(parseQuery(query), pos, queryCaseInsensitive(query));\n  }\n\n  let parseString = (string) => {\n    return string.replace(/\\\\(.)/g, (_, ch) => {\n      if (ch == \"n\") return \"\\n\"\n      if (ch == \"r\") return \"\\r\"\n      return ch\n    })\n  }\n\n  let parseQuery = (query) => {\n    if (query.exec) {\n      return query;\n    }\n    var isRE = query.indexOf('/') === 0 && query.lastIndexOf('/') > 0;\n    if (!!isRE) {\n      try {\n        let matches = query.match(/^\\/(.*)\\/([a-z]*)$/);\n        query = new RegExp(matches[1], matches[2].indexOf(\"i\") == -1 ? \"\" : \"i\");\n      } catch (e) {} // Not a regular expression after all, do a string search\n    } else {\n      query = parseString(query);\n    }\n    if (typeof query == \"string\" ? query == \"\" : query.test(\"\"))\n      query = /x^/;\n    return query;\n  }\n\n  let startSearch = (cm, state, query) => {\n    if (!query || query === '') return;\n    state.queryText = query;\n    state.query = parseQuery(query);\n    cm.removeOverlay(state.overlay, queryCaseInsensitive(state.query));\n    state.overlay = searchOverlay(state.query, queryCaseInsensitive(state.query));\n    cm.addOverlay(state.overlay);\n    if (cm.showMatchesOnScrollbar) {\n      if (state.annotate) {\n        state.annotate.clear();\n        state.annotate = null;\n      }\n      state.annotate = cm.showMatchesOnScrollbar(state.query, queryCaseInsensitive(state.query));\n    }\n  }\n\n  let doSearch = (cm, query, reverse, moveToNext) => {\n    var hiding = null;\n    var state = getSearchState(cm);\n    if (query != state.queryText) {\n      startSearch(cm, state, query);\n      state.posFrom = state.posTo = cm.getCursor();\n    }\n    if (moveToNext || moveToNext === undefined) {\n      findNext(cm, (reverse || false));\n    }\n    updateCount(cm);\n  }\n\n  let clearSearch = (cm) => {\n    cm.operation(() => {\n      var state = getSearchState(cm);\n      state.lastQuery = state.query;\n      if (!state.query) return;\n      state.query = state.queryText = null;\n      cm.removeOverlay(state.overlay);\n      if (state.annotate) {\n        state.annotate.clear();\n        state.annotate = null;\n      }\n    });\n  }\n\n  let findNext = (cm, reverse, callback) => {\n    cm.operation(() => {\n      var state = getSearchState(cm);\n      var cursor = getSearchCursor(cm, state.query, reverse ? state.posFrom : state.posTo);\n      if (!cursor.find(reverse)) {\n        cursor = getSearchCursor(cm, state.query, reverse ? CodeMirror.Pos(cm.lastLine()) : CodeMirror.Pos(cm.firstLine(), 0));\n        if (!cursor.find(reverse)) return;\n      }\n      cm.setSelection(cursor.from(), cursor.to());\n      cm.scrollIntoView({\n        from: cursor.from(),\n        to: cursor.to()\n      }, 20);\n      state.posFrom = cursor.from();\n      state.posTo = cursor.to();\n      if (callback) callback(cursor.from(), cursor.to())\n    });\n  }\n\n  let replaceNext = (cm, query, text) => {\n    let cursor = getSearchCursor(cm, query, cm.getCursor('from'));\n    let start = cursor.from();\n    let match = cursor.findNext();\n    if (!match) {\n      cursor = getSearchCursor(cm, query);\n      match = cursor.findNext();\n      if (!match ||\n        (start && cursor.from().line === start.line && cursor.from().ch === start.ch)) return;\n    }\n    cm.setSelection(cursor.from(), cursor.to());\n    cm.scrollIntoView({\n      from: cursor.from(),\n      to: cursor.to()\n    });\n    cursor.replace(typeof query === 'string' ? text :\n      text.replace(/\\$(\\d)/g, (_, i) => {\n        return match[i];\n      }));\n  }\n\n  let replaceAll = (cm, query, text) => {\n    cm.operation(() => {\n      for (var cursor = getSearchCursor(cm, query); cursor.findNext();) {\n        if (typeof query != \"string\") {\n          var match = cm.getRange(cursor.from(), cursor.to()).match(query);\n          cursor.replace(text.replace(/\\$(\\d)/g, (_, i) => {\n            return match[i];\n          }));\n        } else cursor.replace(text);\n      }\n    });\n  }\n\n  let closeSearchCallback = (cm, state) => {\n    if (state.annotate) {\n      state.annotate.clear();\n      state.annotate = null;\n    }\n    clearSearch(cm);\n  }\n\n  let getOnReadOnlyCallback = (callback) => {\n    let closeFindDialogOnReadOnly = (cm, opt) => {\n      if (opt === 'readOnly' && !!cm.getOption('readOnly')) {\n        callback();\n        cm.off('optionChange', closeFindDialogOnReadOnly);\n      }\n    }\n    return closeFindDialogOnReadOnly;\n  };\n\n  let updateCount = (cm) => {\n    let state = getSearchState(cm);\n    let value = cm.getDoc().getValue();\n    let globalQuery;\n    let queryText = state.queryText;\n\n    if (!queryText || queryText === '') {\n      resetCount(cm);\n      return;\n    }\n\n    while (queryText.charAt(queryText.length - 1) === '\\\\') {\n      queryText = queryText.substring(0, queryText.lastIndexOf('\\\\'));\n    }\n\n    if (typeof state.query === 'string') {\n      globalQuery = new RegExp(queryText, 'ig');\n    } else {\n      globalQuery = new RegExp(state.query.source, state.query.flags + 'g');\n    }\n\n    let matches = value.match(globalQuery);\n    let count = matches ? matches.length : 0;\n\n    let countText = count === 1 ? '1 match found.' : count + ' matches found.';\n    cm.getWrapperElement().parentNode.querySelector('.CodeMirror-search-count').innerHTML = countText;\n  }\n\n  let resetCount = (cm) => {\n    cm.getWrapperElement().parentNode.querySelector('.CodeMirror-search-count').innerHTML = '';\n  }\n\n  let getFindBehaviour = (cm, defaultText, callback) => {\n    if (!defaultText) {\n      defaultText = '';\n    }\n    let behaviour = {\n      value: defaultText,\n      focus: true,\n      selectValueOnOpen: true,\n      closeOnEnter: false,\n      closeOnBlur: false,\n      callback: (inputs, e) => {\n        let query = inputs[0].value;\n        if (!query) return;\n        doSearch(cm, query, !!e.shiftKey);\n      },\n      onInput: (inputs, e) => {\n        let query = inputs[0].value;\n        if (!query) {\n          resetCount(cm);\n          clearSearch(cm);\n          return;\n        };\n        doSearch(cm, query, !!e.shiftKey, false);\n      }\n    };\n    if (!!callback) {\n      behaviour.callback = callback;\n    }\n    return behaviour;\n  }\n\n  let getFindPrevBtnBehaviour = (cm) => {\n    return {\n      callback: (inputs) => {\n        let query = inputs[0].value;\n        if (!query) return;\n        doSearch(cm, query, true);\n      }\n    }\n  };\n\n  let getFindNextBtnBehaviour = (cm) => {\n    return {\n      callback: (inputs) => {\n        let query = inputs[0].value;\n        if (!query) return;\n        doSearch(cm, query, false);\n      }\n    }\n  };\n\n  let closeBtnBehaviour = {\n    callback: null\n  };\n\n  CodeMirror.commands.find = (cm) => {\n    if (cm.getOption(\"readOnly\")) return;\n    clearSearch(cm);\n    let state = getSearchState(cm);\n    var query = cm.getSelection() || getSearchState(cm).lastQuery;\n    let closeDialog = cm.openAdvancedDialog(findDialog, {\n      shrinkEditor: true,\n      inputBehaviours: [\n        getFindBehaviour(cm, query)\n      ],\n      buttonBehaviours: [\n        getFindPrevBtnBehaviour(cm),\n        getFindNextBtnBehaviour(cm),\n        closeBtnBehaviour\n      ],\n      onClose: () => {\n        closeSearchCallback(cm, state);\n      }\n    });\n\n    cm.on(\"optionChange\", getOnReadOnlyCallback(closeDialog));\n    startSearch(cm, state, query);\n    updateCount(cm);\n  };\n\n  CodeMirror.commands.replace = (cm, all) => {\n    if (cm.getOption(\"readOnly\")) return;\n    clearSearch(cm);\n\n    let replaceNextCallback = (inputs) => {\n      let query = parseQuery(inputs[0].value);\n      let text = parseString(inputs[1].value);\n      if (!query) return;\n      replaceNext(cm, query, text);\n      doSearch(cm, query);\n    };\n\n    let state = getSearchState(cm);\n    let query = cm.getSelection() || state.lastQuery;\n    let closeDialog = cm.openAdvancedDialog(replaceDialog, {\n      shrinkEditor: true,\n      inputBehaviours: [\n        getFindBehaviour(cm, query, (inputs) => {\n          inputs[1].focus();\n          inputs[1].select();\n        }),\n        {\n          closeOnEnter: false,\n          closeOnBlur: false,\n          callback: replaceNextCallback\n        }\n      ],\n      buttonBehaviours: [\n        getFindPrevBtnBehaviour(cm),\n        getFindNextBtnBehaviour(cm),\n        {\n          callback: replaceNextCallback\n        },\n        {\n          callback: (inputs) => {\n            // Replace all\n            let query = parseQuery(inputs[0].value);\n            let text = parseString(inputs[1].value);\n            if (!query) return;\n            replaceAll(cm, query, text);\n          }\n        },\n        closeBtnBehaviour\n      ],\n      onClose: () => {\n        closeSearchCallback(cm, state);\n      }\n    });\n\n    cm.on(\"optionChange\", getOnReadOnlyCallback(closeDialog));\n    startSearch(cm, state, query);\n    updateCount(cm);\n  };\n});"]}